# syntax=docker/dockerfile:1.2
version: '3.9'

services:
  vgtpbx-switch:
    profiles: ["small", "medium", "large"]
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile.small}  # Default to small
      args:
        - SIGNALWIRE_TOKEN
      secrets:
        - signalwire_token
    image: vgtpbx-switch:${SIZE:-small}
    container_name: vgtpbx-switch
    depends_on:
      postgres:
        condition: service_healthy    # Ensures PostgreSQL is ready
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB:-vgtpbx}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - freeswitch-config:/etc/vgtpbx/freeswitch
      - freeswitch-recordings:/etc/vgtpbx/media/fs/recordings
      - freeswitch-storage:/etc/vgtpbx/media/fs/storage
      - freeswitch-log:/var/log/freeswitch
      - freeswitch-db:/var/lib/freeswitch/db
    ports:
      - "5060:5060/udp"  # SIP UDP
      - "5060:5060/tcp"  # SIP TCP
      - "5061:5061/tcp"  # SIP TLS
      - "5080:5080/udp"  # SIP UDP Alternative
      - "5080:5080/tcp"  # SIP TCP Alternative
      - "5066:5066/tcp"  # WebSocket for WebRTC
      - "7443:7443/tcp"  # WebSocket TLS for WebRTC
      - "8021:8021/tcp"  # Event Socket
      - "16384-32768:16384-32768/udp"  # RTP Media
    restart: unless-stopped
    networks:
      - vgtpbx-network

  postgres:
    image: vgtpbx-postgres:latest
    container_name: vgtpbx-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-vgtpbx}
      PGDATA: /var/lib/postgresql/data/pgdata

volumes:
  freeswitch-config:
  freeswitch-recordings:
  freeswitch-storage:
  freeswitch-log:
  freeswitch-db:

networks:
  vgtpbx-network:
    external: true    # Use external network defined in postgres compose

secrets:
  signalwire_token:
    environment: SIGNALWIRE_TOKEN